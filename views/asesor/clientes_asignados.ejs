<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Clientes Asignados</title>
    <link rel="stylesheet" href="/stylesheets/home_asesor.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="stylesheet" href="/stylesheets/asesor_navbar.css">
    <link rel="stylesheet" href="/stylesheets/clientes_asignados.css">
    <link rel="stylesheet" href="/stylesheets/footer.css">

</head>
<body>
    <%- include('../partials/asesor_navbar') %>
<div class="container">
    <main>
        <h1>Clientes Asignados</h1>
        <ul class="clientes-list">
            <% if (clientes.length > 0) { %>
                <% clientes.forEach(cliente => { %>
                    <li>
                        <img src="<%= cliente.fotoPerfilUrl || '/images/default-profile.png' %>" alt="Foto de <%= cliente.nombre %>" style="width: 60px; height: 60px; border-radius: 50%; object-fit: cover; margin-bottom: 8px; border: 2px solid #007bff; cursor: pointer;" onclick="openModal('<%= cliente.id %>')">
                        <span onclick="openModal('<%= cliente.id %>')" style="cursor: pointer;">
                            <%= cliente.nombre %> <%= cliente.apellido %>
                        </span>
                    </li>
                <% }); %>
            <% } else { %>
                <li>No hay clientes asignados.</li>
            <% } %>
        </ul>
    </main>
</div>

    <div id="clientModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal()">&times;</span>
            <h2 id="modalClientName"></h2>
            <img id="modalClientPhoto" src="" alt="Foto de Cliente" style="width: 100px; height: 100px; border-radius: 50%;">
            <p id="modalClientDetails"></p>
            <div id="modalClientMoreDetails">
                </div>
        </div>
    </div>

    <%- include('../partials/footer') %>

<script>
    function openModal(clienteId) {
        console.log('openModal: Intentando abrir modal para clienteId:', clienteId);
        fetch(`/api/cliente/${clienteId}`) 
            .then(response => {
                console.log('openModal: Respuesta de la API recibida, status:', response.status);
                if (!response.ok) {
                    throw new Error(`Error HTTP! Estado: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                console.log('openModal: Datos JSON completos del cliente recibidos de la API:', data);
                
                const clienteData = data.cliente; 
                
                console.log('openModal: Objeto clienteData extraído para rellenar modal:', clienteData);

                if (clienteData && clienteData.nombre) {
                    document.getElementById('modalClientName').innerText = `${clienteData.nombre} ${clienteData.apellido}`;
                    document.getElementById('modalClientPhoto').src = clienteData.fotoPerfilUrl || '/images/default-profile.png';

                    const detailsContainer = document.getElementById('modalClientMoreDetails');
                    detailsContainer.innerHTML = ''; 

                    detailsContainer.innerHTML += `<p><strong>Email:</strong> ${clienteData.email || 'N/A'}</p>`;
                    detailsContainer.innerHTML += `<p><strong>Teléfono:</strong> ${clienteData.telefono || 'N/A'}</p>`;
                    detailsContainer.innerHTML += `<p><strong>Dirección:</strong> ${clienteData.direccion || 'N/A'}</p>`;
                    detailsContainer.innerHTML += `<p><strong>Ahorros:</strong> $${(clienteData.ahorrosActuales || 0).toLocaleString('es-VE')}</p>`;
                    detailsContainer.innerHTML += `<p><strong>Ingresos:</strong> $${(clienteData.ingresosMensuales || 0).toLocaleString('es-VE')}</p>`;
                    
                    detailsContainer.innerHTML += `<p><strong>Objetivo Principal:</strong> ${clienteData.objetivo_principal || 'N/A'}</p>`;
                    detailsContainer.innerHTML += `<p><strong>Perfil de Riesgo:</strong> ${clienteData.perfil_riesgo || 'N/A'}</p>`;
                    
                    if (clienteData.fechaRegistro) {
                        console.log('openModal: Fecha de registro raw:', clienteData.fechaRegistro); 

                        // *** CAMBIO CLAVE AQUÍ: AÑADIR 'Z' para indicar que la fecha es UTC ***
                        // Esto hace que JavaScript interprete el string como una fecha UTC,
                        // en lugar de una fecha local, antes de aplicar el timezone de Caracas.
                        const dateStringUTC = clienteData.fechaRegistro.endsWith('Z') ? clienteData.fechaRegistro : `${clienteData.fechaRegistro}Z`;
                        const date = new Date(dateStringUTC); 
                        
                        // Formato específico para Venezuela con zona horaria de Caracas
                        const formattedDate = date.toLocaleDateString('es-VE', {
                            year: 'numeric',
                            month: 'long',
                            day: 'numeric',
                            timeZone: 'America/Caracas' 
                        });
                        console.log('openModal: Fecha de registro formateada:', formattedDate); 
                        detailsContainer.innerHTML += `<p><strong>Fecha de Registro:</strong> ${formattedDate}</p>`;
                    } else {
                        detailsContainer.innerHTML += `<p><strong>Fecha de Registro:</strong> N/A</p>`;
                        console.log('openModal: fechaRegistro es nulo/indefinido.');
                    }

                    document.getElementById('clientModal').style.display = "flex"; 
                    document.getElementById('modalClientDetails').style.display = "none"; 
                    console.log('openModal: Modal mostrado.');

                } else {
                    const errorMessage = 'Error: Datos de cliente incompletos o no encontrados en la respuesta de la API.';
                    console.error('openModal: Datos recibidos (posiblemente incompletos de la API):', data);
                }
            })
            .catch(error => {
                console.error('openModal: Error al obtener los datos del cliente para el modal (AJAX):', error);
                const errorMessage = 'Error al cargar los datos del cliente. Por favor, revisa la consola para más detalles.';
            });
    }

    function closeModal() {
        console.log('closeModal: Cerrando modal.');
        document.getElementById('clientModal').style.display = "none";
    }

    window.onclick = function(event) {
        const modal = document.getElementById('clientModal');
        if (event.target === modal) {
            closeModal();
        }
    }
</script>
</body>
</html>
