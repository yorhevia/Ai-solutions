<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AI Finance Solutions - Perfil de Asesor</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="stylesheet" href="/stylesheets/perfil_asesor.css">
    <link rel="stylesheet" href="/stylesheets/asesor_navbar.css"> 
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/locale/es.min.js"></script>
</head>
<body>
    <%- include('../partials/asesor_navbar') %>

    <div id="globalMessage" class="success-message"></div>

    <div class="container profile-container">
        <section class="profile-photo-section">
            <div class="profile-picture-wrapper">
          <img id="profilePictureDisplay" src="<%= asesor.fotoPerfilUrl || '/images/default-profile.png' %>" alt="Foto de Perfil">
            </div>
            <input type="file" id="profilePictureUpload" accept="image/*" style="display: none;">
            <label for="profilePictureUpload" class="upload-button">
                <i class="fas fa-upload"></i> Subir Foto de Perfil
            </label>
            <span id="uploadMessage" class="upload-message">Por favor, sube una foto formal y clara de perfil. **Recomendado: 250px de ancho y 333px de alto.**</span>
            <p id="profilePictureErrorMessage" class="error-message" style="display: none;"></p>
        </section>

        <section class="profile-info">
            <h2>Información Personal</h2>
            <div class="info-item">
                <i class="fas fa-user icon"></i>
                <span>Nombre Completo:</span>
                <span class="value" id="displayNombre"><%= asesor.nombre %></span>
                <span class="value" id="displayApellido"><%= asesor.apellido %></span>
            </div>
            <div class="info-item">
                <i class="fas fa-envelope icon"></i>
                <span>Email:</span>
                <span class="value" id="displayEmail"><%= asesor.email %></span>
            </div>
            <div class="info-item">
                <i class="fas fa-phone icon"></i>
                <span>Teléfono:</span>
                <span class="value" id="displayTelefono"><%= asesor.telefono || 'No especificado' %></span>
            </div>

            <a href="#" id="editPersonalLink" class="edit-link" style="margin-top: 15px;">
                <i class="fas fa-edit"></i> Editar Información Personal
            </a>
        </section>

        <div id="editPersonalCard" class="edit-card">
            <h3>Editar Información Personal</h3>
            <p id="editPersonalErrorMessage" class="error-message" style="display: none;"></p>
            <form id="editPersonalForm">
                <div class="form-group">
                    <label for="editNombre">Nombre:</label>
                    <input type="text" id="editNombre" name="nombre" value="<%= asesor.nombre || '' %>" required>
                </div>
                <div class="form-group">
                    <label for="editApellido">Apellido:</label>
                    <input type="text" id="editApellido" name="apellido" value="<%= asesor.apellido || '' %>" required>
                </div>
                <div class="form-group">
                    <label for="editEmail">Email:</label>
                    <input type="email" id="editEmail" name="email" value="<%= asesor.email || '' %>" required>
                </div>
                <div class="form-group">
                    <label for="editTelefono">Teléfono:</label>
                    <input type="tel" id="editTelefono" name="telefono" value="<%= asesor.telefono || '' %>">
                </div>
                <div class="button-group">
                    <button type="submit" class="save-button">Guardar</button>
                    <button type="button" id="cancelEditPersonalButton" class="cancel-button">Cancelar</button>
                </div>
            </form>
        </div>

        <section class="professional-info">
            <h2>Información Profesional</h2>
            <div class="info-item">
                <i class="fas fa-briefcase icon"></i>
                <span>Profesión:</span>
                <span class="value" id="displayProfesion"><%= asesor.profesion || 'No especificada' %></span>
            </div>
            <div class="info-item">
                <i class="fas fa-id-card icon"></i>
                <span>Número de Licencia Profesional:</span>
                <span class="value" id="displayLicencia"><%= asesor.licencia || 'No especificada' %></span>
            </div>
            <div class="info-item">
                <i class="fas fa-graduation-cap icon"></i>
                <span>Especialidad Financiera:</span>
                <span class="value" id="displayEspecialidad"><%= asesor.especialidad || 'No especificada' %></span>
            </div>
            <div class="info-item">
                <i class="fas fa-chart-line icon"></i>
                <span>Años de Experiencia:</span>
                <span class="value" id="displayExperiencia"><%= asesor.experiencia || '0' %></span>
            </div>
            <div class="info-item">
                <i class="fas fa-file-alt icon"></i>
                <span>Descripción Profesional:</span>
                <p class="value" id="displayDescripcion"><%= asesor.bio || 'No hay descripción profesional disponible.' %></p>
            </div>
            <a href="#" id="editProfessionalLink" class="edit-link" style="margin-top: 15px;">
                <i class="fas fa-edit"></i> Editar Información Profesional
            </a>
        </section>

        <div id="editProfessionalCard" class="edit-card">
            <h3>Editar Información Profesional</h3>
            <p id="editProfessionalErrorMessage" class="error-message" style="display: none;"></p>
            <form id="editProfessionalForm">
                <div class="form-group">
                    <label for="editProfesion">Profesión:</label>
                    <input type="text" id="editProfesion" name="profesion" value="<%= asesor.profesion || '' %>" required>
                </div>
                <div class="form-group">
                    <label for="editLicencia">Número de Licencia Profesional:</label>
                    <input type="text" id="editLicencia" name="licencia" value="<%= asesor.licencia || '' %>" required>
                </div>
                <div class="form-group">
                    <label for="editEspecialidad">Especialidad Financiera:</label>
                    <input type="text" id="editEspecialidad" name="especialidad" value="<%= asesor.especialidad || '' %>" required>
                </div>
                <div class="form-group">
                    <label for="editExperiencia">Años de Experiencia:</label>
                    <input type="number" id="editExperiencia" name="experiencia" value="<%= asesor.experiencia || '' %>" min="0">
                </div>
                <div class="form-group">
                    <label for="editDescripcion">Descripción Profesional:</label>
                    <textarea id="editDescripcion" name="bio"><%= asesor.bio || '' %></textarea> </div>
                <div class="button-group">
                    <button type="submit" class="save-button">Guardar</button>
                    <button type="button" id="cancelEditProfessionalButton" class="cancel-button">Cancelar</button>
                </div>
            </form>
        </div>

        <section class="security-settings">
            <h2>Seguridad y Verificación de Perfil</h2>
            <div class="info-item">
                <i class="fas fa-key icon"></i>
                <span>Contraseña:</span>
                <span class="value">*********</span>
                <a href="/cambiar-password" class="edit-link"><i class="fas fa-edit"></i> Cambiar</a>
            </div>

            <div class="verification-block">
                <div class="verification-header">
                    <i class="fas fa-user-check icon"></i>
                    <span>Verificación de Identidad (KYC):</span>
                    <span class="status-indicator <%= asesor.kyc_status ? 'status-' + asesor.kyc_status : 'status-no-enviado' %>">
                        <% if (asesor.kyc_status === 'verificado') { %>
                            Verificado <i class="fas fa-check-circle"></i>
                        <% } else if (asesor.kyc_status === 'pendiente') { %>
                            Pendiente <i class="fas fa-hourglass-half"></i>
                        <% } else if (asesor.kyc_status === 'rechazado') { %>
                            Rechazado <i class="fas fa-times-circle"></i>
                        <% } else { %>
                            No Enviado <i class="fas fa-exclamation-triangle"></i>
                        <% } %>
                    </span>
                </div>
                <div class="verification-actions">
                    <% if (asesor.kyc_status !== 'verificado') { %>
                        <a href="/asesor/verificar_identidad" class="action-button primary-action">
                            <i class="fas fa-shield-alt"></i>
                            <% if (asesor.kyc_status === 'pendiente') { %>
                                Ver estado / Re-enviar
                            <% } else if (asesor.kyc_status === 'rechazado') { %>
                                Re-enviar para Verificación
                            <% } else { %>
                                Iniciar Verificación
                            <% } %>
                        </a>
                    <% } %>
                    <% if (asesor.kyc_notes && asesor.kyc_status === 'rechazado') { %>
                        <p class="observation-message full-width"><i class="fas fa-info-circle"></i> **Motivo de rechazo:** <%= asesor.kyc_notes %></p>
                    <% } %>
                    <% if (asesor.fotoIdentificacionUrl) { %> 
                        <a href="<%= asesor.fotoIdentificacionUrl %>" target="_blank" class="action-button secondary-action">
                            <i class="fas fa-eye"></i> Ver Documento de Identidad Enviado
                        </a>
                    <% } %>
                </div>
            </div>

            <div class="verification-block">
                <div class="verification-header">
                    <i class="fas fa-award icon"></i>
                    <span>Credenciales Profesionales:</span>
                    <span class="status-indicator 
                        <% 
                        const isTituloVerified = asesor.title_status === 'verificado';
                        const isCertificacionVerified = asesor.certification_status === 'verificado';

                        const isAllProfessionalVerified = isTituloVerified && (asesor.certification_status === 'no enviado' || asesor.certification_status === null || isCertificacionVerified);

                        const isAnyProfessionalPending = (asesor.title_status === 'pendiente') || (asesor.certification_status === 'pendiente');
                        const isAnyProfessionalRejected = (asesor.title_status === 'rechazado') || (asesor.certification_status === 'rechazado');
                        
                        if (isAllProfessionalVerified) { %>
                            status-verificado
                        <% } else if (isAnyProfessionalPending) { %>
                            status-pendiente
                        <% } else if (isAnyProfessionalRejected) { %>
                            status-rechazado
                        <% } else { %>
                            status-no-enviado
                        <% } %>
                    ">
                        <% 
                        if (isAllProfessionalVerified) { %>
                            Verificado <i class="fas fa-check-circle"></i>
                        <% } else if (isAnyProfessionalPending) { %>
                            Pendiente <i class="fas fa-hourglass-half"></i>
                        <% } else if (isAnyProfessionalRejected) { %>
                            Rechazado <i class="fas fa-times-circle"></i>
                        <% } else { %>
                            No Enviado <i class="fas fa-exclamation-triangle"></i>
                        <% } %>
                    </span>
                </div>
                <div class="verification-actions">
                    <% if (!isAllProfessionalVerified) { %>
                        <a href="/asesor/verificar_identidad" class="action-button primary-action">
                            <i class="fas fa-file-upload"></i>
                            <% if (isAnyProfessionalPending) { %>
                                Ver estado / Adjuntar más
                            <% } else if (isAnyProfessionalRejected) { %>
                                Re-enviar Credenciales
                            <% } else { %>
                                Subir Credenciales
                            <% } %>
                        </a>
                    <% } %>
                    <% if (asesor.title_notes && asesor.title_status === 'rechazado') { %>
                        <p class="observation-message full-width"><i class="fas fa-info-circle"></i> **Título:** <%= asesor.title_notes %></p>
                    <% } %>
                    <% if (asesor.certification_notes && asesor.certification_status === 'rechazado') { %>
                        <p class="observation-message full-width"><i class="fas fa-info-circle"></i> **Certificación:** <%= asesor.certification_notes %></p>
                    <% } %>
                    <% if (asesor.tituloUrl) { %> 
                        <a href="<%= asesor.tituloUrl %>" target="_blank" class="action-button secondary-action">
                            <i class="fas fa-eye"></i> Ver Título Enviado
                        </a>
                    <% } %>
                    <% if (asesor.certificacionUrl) { %>
                        <a href="<%= asesor.certificacionUrl %>" target="_blank" class="action-button secondary-action">
                            <i class="fas fa-eye"></i> Ver Certificación Enviada
                        </a>
                    <% } %>
                </div>
            </div>
        </section>
        <section class="additional-info">
            <h2>Información Adicional</h2>
            <div class="info-item">
                <i class="fas fa-calendar-alt icon"></i>
                <span>Fecha de Registro:</span>
                <span class="value"><%= asesor.formattedCreatedAt %></span>
            </div>
        </section>
    </div>



   <script>
        document.addEventListener('DOMContentLoaded', function() {

            // --- Script para Formatear la Fecha de Registro del Asesor ---
            const fechaRegistroAsesorElement = document.querySelector('.additional-info .info-item .value[data-date]');

            if (fechaRegistroAsesorElement && fechaRegistroAsesorElement.getAttribute('data-date').trim() !== '') {
                const fechaOriginalAsesor = fechaRegistroAsesorElement.getAttribute('data-date');
                
                const parsedDateAsesor = moment(fechaOriginalAsesor);

                if (parsedDateAsesor.isValid()) {
                    // Formatea la fecha en español: Día [de] Mes, Año
                    const fechaFormateadaAsesor = parsedDateAsesor.locale('es').format('D [de] MMMM, YYYY');
                    fechaRegistroAsesorElement.textContent = fechaFormateadaAsesor;
                    console.log('Asesor Frontend: Fecha de registro formateada en español:', fechaFormateadaAsesor);
                } else {
                    console.error('Asesor Frontend: Moment.js no pudo parsear la fecha de registro:', fechaOriginalAsesor);
                    fechaRegistroAsesorElement.textContent = 'Fecha no disponible';
                }
            } else if (fechaRegistroAsesorElement) {
                console.warn('Asesor Frontend: El atributo data-date para la fecha de registro está vacío o no existe.');
                fechaRegistroAsesorElement.textContent = 'Fecha no disponible';
            }
        });
        document.addEventListener('DOMContentLoaded', function() {
            const profilePictureUpload = document.getElementById('profilePictureUpload');
            const profilePictureDisplay = document.getElementById('profilePictureDisplay');
            const uploadMessage = document.getElementById('uploadMessage');
            const profilePictureErrorMessage = document.getElementById('profilePictureErrorMessage');
            const uploadButtonLabel = document.querySelector('.upload-button');
            const globalMessage = document.getElementById('globalMessage');
            let messageTimeout;

            function showMessage(element, message, isSuccess = true, duration = 5000) {
                clearTimeout(messageTimeout);
                element.textContent = message;
                element.className = isSuccess ? 'success-message show' : 'error-message show';
                element.style.display = 'block';

                messageTimeout = setTimeout(() => {
                    element.classList.remove('show');
                    setTimeout(() => {
                        element.style.display = 'none';
                    }, 500);
                }, duration);
            }

            profilePictureUpload.addEventListener('change', async function() {
                const file = this.files[0];
                if (file) {
                    const maxSizeMB = 5;
                    if (file.size > maxSizeMB * 1024 * 1024) {
                        showMessage(profilePictureErrorMessage, `El archivo es demasiado grande. Máximo ${maxSizeMB}MB.`, false);
                        uploadMessage.classList.remove('show');
                        uploadMessage.style.display = 'none';
                        return;
                    }

                    const reader = new FileReader();
                    reader.onload = function(e) {
                        profilePictureDisplay.src = e.target.result;
                    };
                    reader.readAsDataURL(file);

                    try {
                        const formData = new FormData();
                        formData.append('profilePhoto', file);

                        showMessage(uploadMessage, 'Subiendo foto...', true, 99999);
                        profilePictureErrorMessage.style.display = 'none';

                        const response = await fetch('/upload-profile-photo', {
                            method: 'POST',
                            headers: {
                                // 'Content-Type': 'application/json', // FormData sets this automatically
                            },
                            body: formData
                        });

                        const result = await response.json();

                        uploadMessage.classList.remove('show');
                        uploadMessage.style.display = 'none';

                        if (response.ok && result.success) {
                            profilePictureDisplay.src = result.imageUrl;
                            showMessage(globalMessage, '¡Foto de perfil subida y actualizada con éxito!', true);
                        } else {
                            showMessage(profilePictureErrorMessage, result.message || 'Error al subir la foto.', false);
                        }
                    } catch (error) {
                        console.error('Error al subir la foto:', error);
                        uploadMessage.classList.remove('show');
                        uploadMessage.style.display = 'none';
                        showMessage(globalMessage, 'Error de conexión al subir la foto. Inténtalo de nuevo.', false);
                    }

                } else {
                    showMessage(profilePictureErrorMessage, 'No se seleccionó ninguna foto.', false);
                    uploadMessage.classList.remove('show');
                    uploadMessage.style.display = 'none';
                }
            });

            if (uploadButtonLabel) {
                uploadButtonLabel.addEventListener('click', function() {
                    uploadMessage.textContent = 'Por favor, sube una foto formal y clara de perfil. **Recomendado: 250px de ancho y 333px de alto.**';
                    uploadMessage.classList.add('show');
                    uploadMessage.style.display = 'block';
                    profilePictureErrorMessage.style.display = 'none';
                });
            }

            const editPersonalLink = document.getElementById('editPersonalLink');
            const editPersonalCard = document.getElementById('editPersonalCard');
            const cancelEditPersonalButton = document.getElementById('cancelEditPersonalButton');
            const editPersonalForm = document.getElementById('editPersonalForm');
            const editPersonalErrorMessage = document.getElementById('editPersonalErrorMessage');

            editPersonalLink.addEventListener('click', function(event) {
                event.preventDefault();
                editPersonalCard.style.display = 'block';
                editPersonalErrorMessage.style.display = 'none';
                globalMessage.classList.remove('show');
                globalMessage.style.display = 'none';
                editProfessionalCard.style.display = 'none'; 
            });

            cancelEditPersonalButton.addEventListener('click', function() {
                editPersonalCard.style.display = 'none';
                editPersonalErrorMessage.style.display = 'none';
                globalMessage.classList.remove('show');
                globalMessage.style.display = 'none';
            });

            editPersonalForm.addEventListener('submit', async function(event) {
                event.preventDefault();

                const formData = new FormData(editPersonalForm);
                const data = Object.fromEntries(formData.entries());

                if (!data.nombre || !data.apellido || !data.email || !data.telefono) {
                    showMessage(editPersonalErrorMessage, 'Nombre, apellido, email y teléfono son obligatorios.', false);
                    return;
                }

                const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                if (!emailRegex.test(data.email)) {
                    showMessage(editPersonalErrorMessage, 'El formato del correo electrónico no es válido.', false);
                    return;
                }

                try {
                    const response = await fetch('/perfil/editar-info-personal', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(data),
                    });

                    const result = await response.json();

                    if (response.ok) {
                        if (result.asesor) {
                            document.getElementById('displayNombre').textContent = result.asesor.nombre;
                            document.getElementById('displayApellido').textContent = result.asesor.apellido;
                            document.getElementById('displayEmail').textContent = result.asesor.email;
                            document.getElementById('displayTelefono').textContent = result.asesor.telefono;

                            const displayDireccion = document.getElementById('displayDireccion');
                            if (displayDireccion) {
                                displayDireccion.textContent = result.asesor.direccion || '';
                            }

                            editPersonalCard.style.display = 'none';
                            showMessage(globalMessage, '¡Información personal actualizada con éxito!', true);
                        } else {
                            showMessage(editPersonalErrorMessage, result.message || 'Error al actualizar: faltan datos del perfil.', false);
                        }
                    } else {
                        showMessage(editPersonalErrorMessage, result.error || 'Error al actualizar la información personal.', false);
                    }
                } catch (error) {
                    console.error('Error en la solicitud fetch o al procesar la respuesta:', error);
                    showMessage(globalMessage, 'Error de conexión o de red al actualizar información personal. Inténtalo de nuevo.', false);
                }
            });

            const editProfessionalLink = document.getElementById('editProfessionalLink');
            const editProfessionalCard = document.getElementById('editProfessionalCard');
            const cancelEditProfessionalButton = document.getElementById('cancelEditProfessionalButton');
            const editProfessionalForm = document.getElementById('editProfessionalForm');
            const editProfessionalErrorMessage = document.getElementById('editProfessionalErrorMessage');

            editProfessionalLink.addEventListener('click', function(event) {
                event.preventDefault();
                editProfessionalCard.style.display = 'block';
                editProfessionalErrorMessage.style.display = 'none';
                globalMessage.classList.remove('show');
                globalMessage.style.display = 'none';
                editPersonalCard.style.display = 'none';
            });

            cancelEditProfessionalButton.addEventListener('click', function() {
                editProfessionalCard.style.display = 'none';
                editProfessionalErrorMessage.style.display = 'none';
                globalMessage.classList.remove('show');
                globalMessage.style.display = 'none';
            });

            editProfessionalForm.addEventListener('submit', async function(event) {
                event.preventDefault();

                const formData = new FormData(editProfessionalForm);
                const data = Object.fromEntries(formData.entries());

                if (!data.profesion || !data.licencia || !data.especialidad) {
                    showMessage(editProfessionalErrorMessage, 'Profesión, licencia y especialidad son obligatorios.', false);
                    return;
                }
                if (data.experiencia && (isNaN(data.experiencia) || data.experiencia < 0)) {
                    showMessage(editProfessionalErrorMessage, 'Años de experiencia debe ser un número positivo.', false);
                    return;
                }

                try {
                    const response = await fetch('/perfil/editar-info-profesional', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(data),
                    });

                    const result = await response.json();

                    if (response.ok) {
                        if (result.asesor) {
                            document.getElementById('displayProfesion').textContent = result.asesor.profesion;
                            document.getElementById('displayLicencia').textContent = result.asesor.licencia;
                            document.getElementById('displayEspecialidad').textContent = result.asesor.especialidad;
                            document.getElementById('displayExperiencia').textContent = result.asesor.experiencia;
                            document.getElementById('displayDescripcion').textContent = result.asesor.bio || ''; // Aquí se usa bio

                            editProfessionalCard.style.display = 'none';
                            showMessage(globalMessage, '¡Información profesional actualizada con éxito!', true);
                        } else {
                            showMessage(editProfessionalErrorMessage, result.message || 'Error al actualizar: faltan datos del perfil profesional.', false);
                        }
                    } else {
                        showMessage(editProfessionalErrorMessage, result.error || 'Error al actualizar la información profesional.', false);
                    }
                } catch (error) {
                    console.error('Error en la solicitud fetch o al procesar la respuesta:', error);
                    showMessage(globalMessage, 'Error de conexión o de red al actualizar información profesional. Inténtalo de nuevo.', false);
                }
            });
        });
    </script>
    <%- include('../partials/footer') %>
</body>
</html>